import { GoogleGenAI } from "@google/genai";
import { CohereEmbeddings } from "@langchain/cohere";
import { QdrantVectorStore } from "@langchain/qdrant";
import dotenv from "dotenv";
import { isCollectionExists } from "./db_collection.js";
import removeMd from '@brainfish-ai/remove-markdown'

dotenv.config();

export const chatHandler = async (req, res) => {
  const userQuery = req.body.query;
  const user = req.cookies.sessionId;
  try {
    const isExists = await isCollectionExists(user);

    if (!isExists) {
      return res
        .status(404)
        .json({
          answer: "No documents uploaded yet, please upload a document",
        });
    }

    const embeddings = new CohereEmbeddings({
      apiKey: process.env.COHERE_API_KEY,
      model: "embed-english-v3.0",
    });

    const vectorStore = await QdrantVectorStore.fromExistingCollection(
      embeddings,
      {
        url: process.env.QDRANT_URL,
        collectionName: user,
        apiKey: process.env.QDRANT_API_KEY,
      }
    );

    const retriever = vectorStore.asRetriever({ k: 2 });
    const result = await retriever.invoke(userQuery);

    const SYSTEM_PROMPT = `You are a helpful assistant. Based only on the following context from a file, answer the user query precisely. If you dont have relevant information from context for user question then politely say that relevant information is not provided in the context means uploaded documents. The response should look like generated by AI, not like that is just copy pasted from the context, so make it like generated by you.
                          Context:${JSON.stringify(result)}
                          Question: ${userQuery}`;

    const ai = new GoogleGenAI({ apiKey: process.env.GOOGLE_API_KEY });

    const response = await ai.models.generateContent({
      model: "gemini-2.5-flash",
      contents: SYSTEM_PROMPT,
    });

    const simpleResponse = removeMd(response.text)
    res.status(200).json({ answer: simpleResponse });
  } catch(error){
    console.log(error.message)
    res.status(500).json({message: "Internal Server Error, Try Again"})
  }
  
};
